[General]
network = ieee802154.simulations.net 


###----- Scenario: Node transmits to coordinator in non-beacon-enabled PAN ----###
# Two single and static IEEE 802.15.4 Hosts, one sender node and one coordinator
# Scenario from 802.15.4 standard - Figure 7 and Figure 70
# Communication from a node to a coordinator in a non-beacon-enabled PAN 
# Acknowledgments disabled
# CAP transmission
# Direct transmission
# Beacon Order      = 15 -> no regular beacon, only when requested
# Superframe Order  = 15 -> no superframe
# --> Non-Beacon-Enabled Mode
###---------------------------------------------------------------###
[Config NonBeaconMode-TXtoCoordinator]

*.numHosts=2

seed-0-lcg32 = 111  # switch around this seed if u want different startup behaviours
*.IEEE802154Nodes[*].Network.stdLLC.rng-0 = 0   # specify which #RNG is used per node / module

*.IEEE802154Nodes[*].mobility.initFromDisplayString = false     # set XYZ positions manually 

*.IEEE802154Nodes[0].mobility.initialX = 20m
*.IEEE802154Nodes[0].mobility.initialY = 20m
*.IEEE802154Nodes[0].mobility.initialZ = 0m

*.IEEE802154Nodes[1].mobility.initialX = 80m
*.IEEE802154Nodes[1].mobility.initialY = 80m
*.IEEE802154Nodes[1].mobility.initialZ = 0m

*.IEEE802154Nodes[*].application.packetLength = 25Byte
*.IEEE802154Nodes[*].application.protocol = 1
*.IEEE802154Nodes[*].application.sendInterval = 1s
*.IEEE802154Nodes[1].application.numPackets = 100
*.IEEE802154Nodes[*].application.startTime = 10s        # set this past the mac start time
sim-time-limit = 120s                                   # 100 packets, one per second plus 10s start time
# for IPvxTrafGen use a destination address where the 802.15.4 MAC is represented by the last 8 toupels, LLC::tokenDest converts it into 802.15.4 MAC
# To disable the traffic generator, set destAddresses to ""
*.IEEE802154Nodes[1].application.destAddresses = "2001:0DB8:85A3:08D3:0AAA:0000:0000:0001"
*.IEEE802154Nodes[*].NIC.MAC.IEEE802154Mac.startWithoutStartReq = true 
*.IEEE802154Nodes[0].NIC.MAC.IEEE802154Mac.isPANCoordinator = true
#*.IEEE802154Nodes[0].NIC.MAC.IEEE802154Mac.isRecvGts = false            # node[0] is sending the GTS
*.IEEE802154Nodes[1].NIC.MAC.IEEE802154Mac.isPANCoordinator = false

*.IEEE802154Nodes[*].Network.stdLLC.TXoption = 0                # 0 = direct transmission without acks (Figure 70 of 802.15.4-2006) 
*.IEEE802154Nodes[*].Network.stdLLC.ScanDuration = 1.5          # [aBaseSuperframeDuration * (2^n + 1)] this is n so - value is Symbols

*.IEEE802154Nodes[*].Network.stdLLC.BeaconOrder = 15            # disable superframe / beacons
*.IEEE802154Nodes[*].Network.stdLLC.SuperframeOrder = 15
*.IEEE802154Nodes[*].NIC.MAC.IEEE802154Mac.BeaconOrder = 15     # disable superframe / beacons
*.IEEE802154Nodes[*].NIC.MAC.IEEE802154Mac.SuperframeOrder = 15


###--------- Scenario: Single FFD starting a WPAN ---------###
# One single and static IEEE 802.15.4 Host
# Single host is starting on the communication channel, searches for other nodes and starts a WPAN
# Scenario to test out correct WPAN starting procedure
# Acknowledgments disabled
# CAP transmission for beacon-enabled PAN
# Direct transmission
# Beacon Order      = 6 -> Beacon Interval      61440 Symbols = 983.04ms
# Superframe Order  = 6 -> Superframe Duration  61440 Symbols = 983.04ms
# Duty Cycle        = 100.00 %
###---------------------------------------------------------------###
[Config StartWPAN-1Node_Starting_WPAN]

*.numHosts=1

*.IEEE802154Nodes[0].mobility.initFromDisplayString = false     # set XYZ positions manually 

*.IEEE802154Nodes[0].mobility.initialX = 200m
*.IEEE802154Nodes[0].mobility.initialY = 200m
*.IEEE802154Nodes[0].mobility.initialZ = 0m

*.IEEE802154Nodes[0].application.packetLength = 10Byte
*.IEEE802154Nodes[0].application.protocol = 1
*.IEEE802154Nodes[0].application.sendInterval = 1s
*.IEEE802154Nodes[0].application.numPackets = 10
*.IEEE802154Nodes[0].application.startTime = 10s        # set this past the mac start time
sim-time-limit = 120s                                   # 100 packets, one per second plus 10s start time
# for IPvxTrafGen use a destination address where the 802.15.4 MAC is represented by the last 8 toupels, LLC::tokenDest converts it into 802.15.4 MAC
# To disable the traffic generator, set destAddresses to ""
*.IEEE802154Nodes[0].application.destAddresses = "2001:0DB8:85A3:08D3:0AAA:0000:0000:0002"

*.IEEE802154Nodes[0].Network.stdLLC.TXoption = 0

*.IEEE802154Nodes[0].Network.stdLLC.BeaconOrder = 6
*.IEEE802154Nodes[0].Network.stdLLC.SuperframeOrder = 6
*.IEEE802154Nodes[0].NIC.MAC.IEEE802154Mac.BeaconOrder = 6
*.IEEE802154Nodes[0].NIC.MAC.IEEE802154Mac.SuperframeOrder = 6
*.IEEE802154Nodes[0].NIC.MAC.IEEE802154Mac.isRecvGts = false            # node[0] is sending the GTS


###----- Scenario: Two Nodes competing to start a WPAN ----###
# Two single and static IEEE 802.15.4 Hosts competing to be the WPAN coordinator
# change the seed to adjust the starting behavior
# Acknowledgments disabled
# CAP transmission for beacon-enabled PAN
# Direct transmission
# Beacon Order      = 6 -> Beacon Interval      61440 Symbols = 983.04ms
# Superframe Order  = 6 -> Superframe Duration  61440 Symbols = 983.04ms
# Duty Cycle        = 100.00 %
###---------------------------------------------------------------###
[Config StartWPAN-2Nodes_Competing2StartWPAN]

*.numHosts=2

seed-0-lcg32 = 111  # switch around this seed if u want different startup behaviours
*.IEEE802154Nodes[*].Network.stdLLC.rng-0 = 0   # specify which #RNG is used per node / module

*.IEEE802154Nodes[*].mobility.initFromDisplayString = false     # set XYZ positions manually 

*.IEEE802154Nodes[0].mobility.initialX = 10m
*.IEEE802154Nodes[0].mobility.initialY = 10m
*.IEEE802154Nodes[0].mobility.initialZ = 0m

*.IEEE802154Nodes[1].mobility.initialX = 90m
*.IEEE802154Nodes[1].mobility.initialY = 90m
*.IEEE802154Nodes[1].mobility.initialZ = 0m

*.IEEE802154Nodes[*].application.packetLength = 10Byte
*.IEEE802154Nodes[*].application.protocol = 1
*.IEEE802154Nodes[*].application.sendInterval = 1s
*.IEEE802154Nodes[1].application.numPackets = 100
*.IEEE802154Nodes[*].application.startTime = 10s        # set this past the mac start time
# for IPvxTrafGen use a destination address where the 802.15.4 MAC is represented by the last 8 toupels, LLC::tokenDest converts it into 802.15.4 MAC
# To disable the traffic generator, set destAddresses to ""
*.IEEE802154Nodes[1].application.destAddresses = "2001:0DB8:85A3:08D3:0AAA:0000:0000:0001"

*.IEEE802154Nodes[*].Network.stdLLC.TXoption = 0
*.IEEE802154Nodes[*].Network.stdLLC.ScanDuration = 1.5       	# [aBaseSuperframeDuration * (2^n + 1)] this is n so - value is Symbols

*.IEEE802154Nodes[*].Network.stdLLC.BeaconOrder = 6
*.IEEE802154Nodes[*].Network.stdLLC.SuperframeOrder = 6
*.IEEE802154Nodes[*].NIC.MAC.IEEE802154Mac.BeaconOrder = 6
*.IEEE802154Nodes[*].NIC.MAC.IEEE802154Mac.SuperframeOrder = 6
